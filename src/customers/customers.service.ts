import { Injectable } from '@nestjs/common';
import { InjectRepository } from '@nestjs/typeorm';
import { Repository } from 'typeorm';
import { Customer } from './entities/customer.entity';
import { CreateCustomerDto } from './dto/create-customer.dto';
import { UpdateCustomerDto } from './dto/update-customer.dto';

@Injectable()
export class CustomersService {
  constructor(
    @InjectRepository(Customer)
    private customerRepository: Repository<Customer>,
  ) {}

  /** ‚ûï T·∫°o m·ªõi customer */
  create(createCustomerDto: CreateCustomerDto): Promise<Customer> {
    const newCustomer = this.customerRepository.create(createCustomerDto);
    return this.customerRepository.save(newCustomer);
  }

  /** üì• L·∫•y to√†n b·ªô */
  findAll(): Promise<Customer[]> {
    return this.customerRepository.find();
  }

  /** üîé L·∫•y theo ID */
  findOne(id: string): Promise<Customer | null> {
    return this.customerRepository.findOneBy({ id });
  }

  /** ‚úèÔ∏è S·ª≠a */
  update(id: string, updateCustomerDto: UpdateCustomerDto): Promise<Customer> {
    return this.customerRepository.save({ ...updateCustomerDto, id });
  }

  /** ‚ùå Xo√° */
  async remove(id: string): Promise<void> {
    await this.customerRepository.delete(id);
  }
}
